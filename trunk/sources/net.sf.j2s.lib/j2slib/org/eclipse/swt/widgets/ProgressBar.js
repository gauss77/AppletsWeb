$_L(["$wt.widgets.Control"],"$wt.widgets.ProgressBar",["$wt.graphics.Point"],function(){
c$=$_C(function(){
this.minimum=0;
this.maximum=0;
this.selection=0;
this.innerHandle=null;
$_Z(this,arguments);
},$wt.widgets,"ProgressBar",$wt.widgets.Control);
c$.checkStyle=$_M(c$,"checkStyle",
function(style){
style|=524288;
return $wt.widgets.Widget.checkBits(style,256,512,0,0,0,0);
},"~N");
$_M(c$,"computeSize",
function(wHint,hHint,changed){
var border=this.getBorderWidth();
var width=border*2;
var height=border*2;
if((this.style&256)!=0){
width+=160;
height+=16;
}else{
width+=16;
height+=160;
}if(wHint!=-1)width=wHint+(border*2);
if(hHint!=-1)height=hHint+(border*2);
return new $wt.graphics.Point(width,height);
},"~N,~N,~B");
$_V(c$,"createHandle",
function(){
this.minimum=0;
this.maximum=100;
this.handle=d$.createElement("DIV");
this.handle.className="progress-bar-default";
if(this.parent!=null&&this.parent.handle!=null){
this.parent.handle.appendChild(this.handle);
}this.innerHandle=d$.createElement("DIV");
this.handle.appendChild(this.innerHandle);
if((this.style&256)!=0){
this.innerHandle.className="progress-bar-horizontal";
}else{
this.innerHandle.className="progress-bar-vertical";
}this.startTimer();
});
$_M(c$,"getMaximum",
function(){
return this.maximum;
});
$_M(c$,"getMinimum",
function(){
return this.minimum;
});
$_M(c$,"getSelection",
function(){
return this.selection;
});
$_M(c$,"releaseWidget",
function(){
$_U(this,$wt.widgets.ProgressBar,"releaseWidget",[]);
this.stopTimer();
});
$_M(c$,"startTimer",
function(){
if((this.style&2)!=0){
}});
$_M(c$,"stopTimer",
function(){
if((this.style&2)!=0){
}});
$_M(c$,"setMaximum",
function(value){
if(0<=this.minimum&&this.minimum<value){
this.maximum=value;
}},"~N");
$_M(c$,"setMinimum",
function(value){
if(0<=value&&value<this.maximum){
this.minimum=value;
}},"~N");
$_M(c$,"setSelection",
function(value){
this.selection=value;
if((this.style&256)!=0){
this.innerHandle.style.width=Math.round(Math.floor(this.getSize().x*this.selection/this.maximum))+"px";
}else{
this.innerHandle.style.height=Math.round(Math.floor(this.getSize().y*this.selection/this.maximum))+"px";
}},"~N");
$_M(c$,"windowClass",
function(){
return"DIV";
});
$_S(c$,
"DELAY",100,
"TIMER_ID",100,
"MINIMUM_WIDTH",100);
});
