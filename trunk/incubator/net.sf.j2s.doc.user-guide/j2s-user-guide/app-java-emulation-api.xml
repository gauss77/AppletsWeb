<!-- 

    Copyright (C)  2010  SebastiÃ¡n Gurin.
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled "GNU
    Free Documentation License".

@author: sgurin 

-->

<appendix  id="app-java-emulation-api" >
  
  <title>J2S Java Emulation API</title>
  
  <epigraph>
  <attribution>Arthur C. Clarke</attribution>
  <para>
  Any sufficiently advanced technology is indistinguishable from magic.
  </para>
  </epigraph>


  <para>In this section we will examine Java2Script support for java emulation. When you include the j2slib.z.js script in your html documents
  Java2Script provides 2 types of APIs: </para>
  
  <itemizedlist>
  <listitem><formalpara><title>Java Language API</title><para>. As we have seen in .js generated files, the object <code>Clazz</code> contains 
  methods for that emulates the java language leting the javascript programmer to declare java elements like package, classes, methods and so on. 
  </para></formalpara></listitem>  
  
  <listitem><formalpara><title>Java Runtime API</title><para>. As we have seen in the html files generated by Java2Script when we run a J2S application,
  the <code>ClazzLoader</code> object contains an API for configuring the java runtime, for example, leting the javascript programmer configure the 
  "java classpath", loading a set of classes and executing some java code when those classes are available. 
  </para></formalpara></listitem>  
  </itemizedlist>
  
  <para>In this chapter we try to document the relevant API functions of this two javascript objects.</para>
  
  
  
  
  
  
  
  
  
  <section id="java-language-emulation-api"><title>Java Language Emulation API</title>
  
  <para>When including the script j2slib.z.js, there will be available the object Clazz that contains functions for "doing java" in javascript. 
  We have already examine this kind of JavaScript code generated by J2S in <xref linkend="examining-generated-js-files"/>. </para>
  
  <para>a lot of documentation is at http://j2s.sourceforge.net/articles/oop-in-js-by-j2s.html. 
  TODO: include that in this section???</para>


  <bridgehead renderas="sect2">Clazz.defineMethod = function (clazzThis, funName, funBody, funParams)</bridgehead>
  <simpara>define a java method. the doc says:</simpara>  
  
  <programlisting>
  /*
 * Define method for the class with the given method name and method
 * body and method parameter signature.
 *
 * @param clazzThis host class in which the method to be defined
 * @param funName method name
 * @param funBody function object, e.g function () { ... }
 * @param funParams paramether signature, e.g ["string", "number"]
 * @return method of the given name. The method may be funBody or a wrapper
 * of the given funBody.
 */
/* public */
Clazz.defineMethod = function (clazzThis, funName, funBody, funParams)

example defining an instance method:
TODO

example defining a class method:
TODO
  </programlisting>
  
  </section>
  
  
  
  
  
  
  
  <section id="java-runtime-emulation-api"><title>Java Runtime Emulation API</title>
  
  <para>In <xref linkend="executing-java-from-html"/> we have examined how a java program is executed in an html document using the object 
  ClazzLoader provided by J2S that contains method for configuring the java runtime with javascript, like setting the java classpath, loading classes 
  and invoking java code. Here we will document all relevant functions of that object.
  </para>
  
  
   <bridgehead renderas="sect2">ClazzLoader.packageClasspath (pkg, base, index) </bridgehead>
  <simpara>TODO: the index arguments, if true, a file .package will try to be parsed. this file can be used by j2s library autors to configure how a j2s library must be loaded. </simpara>  
  
  <bridgehead renderas="sect2">ClazzLoader.setPrimaryFolder = function(bin)</bridgehead>
  <simpara>TODO</simpara>  
  
   <bridgehead renderas="sect2">ClazzLoader.ignore = function ()</bridgehead>
  <simpara>Makes the J2s compiler to ignore (not load) an array of classes. accepts an array of classnames to ignore. Used when we put set some classes as "Abandoned" in the  project Java2Script properties page.</simpara>  
  
  <bridgehead renderas="sect2">ClazzLoader.jarClasspath</bridgehead>
  <simpara>Makes the J2s compiler to ignore (not load) an array of classes. accepts an array of classnames to ignore. Used when we put set some classes as "Abandoned" in the  project Java2Script properties page.</simpara>  
  
    ClazzLoader.jarClasspath (base + "util/Collections.js", [
    "java.util.Collections",
    "java.util.Collections.CheckedCollection",
    "java.util.Collections.CheckedList",
    "java.util.Collections.CheckedListIterator",
    "java.util.Collections.CheckedMap",
 ......
  ]);
  </section>
</appendix>
